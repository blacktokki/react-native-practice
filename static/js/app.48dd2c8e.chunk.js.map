{"version":3,"sources":["navigation/Config.js","packages sync /^/.*/screens$","App.tsx","packages/core/hooks/useCachedResources.ts","packages/core/screens/NotFoundScreen.tsx","webpack:///D:/NodeProj/react-native-practice/types.tsx?2156","navigation/DrawerNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","packages/core/assets/fonts/SpaceMono-Regular.ttf","packages.js","packages/core/components/Accordion.tsx","packages/core/components/DraggableFlatList.web.tsx","packages/core/components/DraggableAccordion.tsx","packages/core/components/DraggableFlatListMain.tsx","packages/core/components/Themed.tsx","packages/core/components/StyledText.tsx","packages/core/components/EditScreenInfo.tsx","packages/core/components/SectionDummy.tsx","packages/core/screens/TabOneScreen.tsx","packages/core/screens/TabTwoScreen.tsx","packages/core/screens/TabThreeScreen.tsx","packages/core/screens/index.tsx","packages/core/hooks/useColorScheme.ts","packages/core/constants/Colors.ts"],"names":["Constants","initialRouteName","repo","packages","rootPath","Object","assign","require","default","e","split","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","process","versions","proxied","window","XMLHttpRequest","prototype","open","location","href","origin","sessionStorage","setItem","history","replaceState","arr","apply","this","slice","call","arguments","l","undefined","search","decoded","s","replace","join","pathname","hash","ignoreWarnings","_console","_","clone","console","App","isLoadingComplete","useCachedResources","colorScheme","useColorScheme","platform","_href","getItem","warn","message","forEach","value","indexOf","React","setLoadingComplete","a","async","SplashScreen","Font","Ionicons","font","NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","DrawerParamList","Drawer","createDrawerNavigator","Navigators","Config","reduce","previousValue","currentValue","Package","concat","component","headerTitle","drawerName","name","substring","lastIndexOf","Screen","key","StackNavigatorGeneric","options","drawerIcon","TabBarIcon","DrawerNavigatorGeneric","DrawerNavigator","Navigator","screenOptions","drawerContentOptions","activeTintColor","Colors","tint","props","size","marginBottom","TabStack","createStackNavigator","headerLeft","Button","openDrawer","screens","_previousValue","_currentValue","_screens","url","prefixes","Linking","config","Root","path","NotFound","Navigation","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","headerShown","Accordion_Panel","state","expanded","initExpanded","maxHeight","overflow","onCloseCallback","mount","useCloseCallback","setState","callback","Animated","timing","height","toValue","duration","useNativeDriver","start","Value","closeAll","_value","expandSpeed","setTimeout","event","setExpand","holderStyle","opacity","horizontal","push","renderItem","item","buttonOnPress","bind","contentStyle","contentOnLayout","nativeEvent","layout","x","y","width","onClose","Component","Accordion","update_Layout","childrenRef","ref","params","numnum","index","params2","MainContainer","ScrollView","contentContainerStyle","paddingHorizontal","data","paddingTop","Platform","OS","Results","SortableContainer","useState","length","dataLength","setDataLength","useRef","useEffect","last","current","scrollToEnd","scrollDelay","scrollToIndex","animated","el","getNativeScrollRef","getScrollableNode","onWheel","deltaY","preventDefault","scrollTo","left","scrollLeft","addEventListener","removeEventListener","FlatList","scrollEnabled","keyExtractor","toString","removeClippedSubviews","windowSize","Math","floor","ListFooterComponent","onScroll","Element","SortableElement","children","DraggableFlatList","setData","setLast","cacheItem","useCallback","isActive","read","add","newData","_data","splice","dataCallback","remove","shift","newIndex","oldIndex","commandSetter","getData","onSortEnd","distance","sortEnabled","updateBeforeSortStart","DraggableAccordion","renderDraggableItem","drag","activeOpacity","header","onLayout","body","renderItemSort","marginRight","onLongPress","renderItemUnsort","DraggableFlatListMain","headerHeight","useHeaderHeight","Children","toArray","_sortEnabled","_renderItem","_height","Dimensions","get","minHeight","useThemeColor","colorName","colorFromProps","lightColor","darkColor","otherProps","light","dark","MonoText","fontFamily","EditScreenInfo","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","WebBrowser","marginHorizontal","marginVertical","borderRadius","lineHeight","textAlign","SectionDummy","onPress1","pressText1","separator","Panel_Button_Text","Panel_Holder","borderWidth","borderColor","Panel_text","TabOneScreen","command","log","i","navigate","commandAll","TabTwoScreen","TabThreeScreen","n","contentOffset","layoutMeasurement","contentSize","_useColorScheme","text","background","tabIconDefault","tabIconSelected"],"mappings":"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","file":"static/js/app.48dd2c8e.chunk.js","sourcesContent":["const Constants = {\r\n    initialRouteName:\"TabOne\",\r\n    repo:\"https://github.com/blacktokki/react-native-practice.git\",\r\n    packages: ['core'],\r\n    rootPath: ''\r\n}\r\ntry {\r\n    Object.assign(Constants, require('../packages').default)\r\n}\r\ncatch(e){\r\n}\r\nConstants.rootPath = (Constants.repo).split('github.io/')[1] //github repository name\r\nmodule.exports = Constants","var map = {\n\t\"./core/screens\": 332\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 206;","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './packages/core/hooks/useCachedResources';\r\nimport useColorScheme from './packages/core/hooks/useColorScheme';\r\nimport Navigation from './navigation';\r\nimport _ from 'lodash';\r\n\r\nif (process.versions && process.versions['electron']){\r\n  (function() {  // for electron\r\n    var proxied = window.XMLHttpRequest.prototype.open;\r\n    window.XMLHttpRequest.prototype.open = function() {\r\n      if(window.location.href != window.location.origin + '/'){\r\n        sessionStorage.setItem('_href', window.location.href)\r\n      }\r\n      window.history.replaceState(null, '', window.location.origin)    \r\n      var arr:any = []\r\n      return proxied.apply(this, arr.slice.call(arguments));\r\n    };\r\n  })();\r\n}\r\n\r\n\r\n(function(l) {  // for github-page\r\n  if (l !== undefined && l.search[1] === '/' ) {\r\n    var decoded = l.search.slice(1).split('&').map(function(s) { \r\n      return s.replace(/~and~/g, '&')\r\n    }).join('?');\r\n    window.history.replaceState(null, '',\r\n        l.pathname.slice(0, -1) + decoded + l.hash\r\n    );\r\n  }\r\n}(window.location))\r\n\r\nconst ignoreWarnings = ['ReactNativeFiberHostComponent'];\r\nconst _console = _.clone(console);\r\nconsole.warn = (message: string|Object) => {\r\n    var warn = true;\r\n    if (message instanceof Object)\r\n      warn = false;\r\n    else{\r\n      ignoreWarnings.forEach((value)=>{\r\n        if (message.indexOf && message.indexOf(value) <= -1) {\r\n            warn = false;\r\n        }\r\n      })\r\n    };\r\n    if (warn){\r\n        _console.warn(message);\r\n    }\r\n    else{\r\n        // console.log(message)\r\n    }\r\n};\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    if (process.versions && process.versions['electron']){  // for electron\r\n      if (process.platform == 'win32' && process.env.NODE_ENV == 'production'){\r\n        window.history.replaceState(null, '', 'file:///')\r\n      }\r\n      else{\r\n        var _href = sessionStorage.getItem('_href')\r\n        window.history.replaceState(null, '', _href || '/')\r\n      }\r\n    }\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nimport { RootStackParamList } from '../../../types';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","/**\r\n * Learn more about using TypeScript with React Navigation:\r\n * https://reactnavigation.org/docs/typescript/\r\n */\r\n\r\nexport type RootStackParamList = {\r\n  Root: undefined;\r\n  NotFound: undefined;\r\n};\r\n\r\nexport const DrawerParamList:Record<string, object | undefined> = {}","/**\r\n * Learn more about createDrawerNavigator:\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\n\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { DrawerScreenProps, createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { Button } from 'react-native';\r\n\r\nimport Colors from '../packages/core/constants/Colors';\r\nimport useColorScheme from '../packages/core/hooks/useColorScheme';\r\nimport { DrawerParamList } from '../types'\r\nimport Config from './Config'\r\n\r\nconst Drawer = createDrawerNavigator<typeof DrawerParamList>();\r\nconst Navigators = Config.packages.reduce((previousValue, currentValue)=>{\r\n  const Package = require('../packages/'+ currentValue +'/screens')\r\n  return previousValue.concat(Object.keys(Package.default).map((value)=>DrawerNavigatorGeneric(Package.default[value].component, Package.default[value].title)))\r\n} , [] as JSX.Element[])\r\n\r\nexport default function DrawerNavigator() {\r\n  const colorScheme = useColorScheme();\r\n  //  drawerActiveTintColor: Colors[colorScheme].tint\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName={Config.initialRouteName as keyof typeof DrawerParamList}\r\n      screenOptions={{ }}\r\n      drawerContentOptions={{activeTintColor: Colors[colorScheme].tint }}\r\n    >\r\n      { Navigators }\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nfunction DrawerNavigatorGeneric(component:React.ComponentType<any>, headerTitle:string){\r\n  const drawerName = component.name.substring(0, component.name.lastIndexOf(\"Screen\"))\r\n  DrawerParamList[drawerName] = undefined\r\n  return (\r\n    <Drawer.Screen\r\n      key={drawerName}\r\n      name={drawerName}\r\n      component={StackNavigatorGeneric(component, headerTitle)}\r\n      options={{\r\n        drawerIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\n// You can explore the built-in icon families and icons on the web at:\r\n// https://icons.expo.fyi/\r\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\r\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\n// Each tab has its own navigation stack, you can read more about this pattern here:\r\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\r\nfunction StackNavigatorGeneric<RouteName extends keyof typeof DrawerParamList>(component:React.ComponentType<any>, headerTitle:string){\r\n  const ParamList:Record<string, object | undefined> = {}\r\n  ParamList[component.name] = undefined\r\n  const TabStack = createStackNavigator<typeof ParamList>();\r\n  function TabNavigator({navigation}: DrawerScreenProps<typeof DrawerParamList, RouteName>) {\r\n    return (\r\n      <TabStack.Navigator>\r\n        <TabStack.Screen\r\n          name={component.name}\r\n          component={component}\r\n          options={{\r\n            headerTitle: headerTitle,\r\n            headerLeft: () => (\r\n              <Button\r\n                onPress={() => navigation.openDrawer()}\r\n                title=\"Menu\"\r\n                color=\"#888\"\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n      </TabStack.Navigator>\r\n    );\r\n  }\r\n  return TabNavigator\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { PathConfigMap } from '@react-navigation/core';\r\nimport * as Linking from 'expo-linking';\r\nimport Config from './Config'\r\n\r\nconst screens = Config.packages.reduce((previousValue, currentValue)=>{\r\n  const Package = require('../packages/'+ currentValue +'/screens')\r\n  Object.keys(Package.default).reduce((_previousValue, _currentValue)=>{\r\n    const _screens:PathConfigMap = {}\r\n    _screens[_currentValue] = Package.default[_currentValue].url\r\n    _previousValue[_currentValue.substring(0, _currentValue.lastIndexOf(\"Screen\"))] = { screens:_screens}\r\n    return _previousValue\r\n  }, previousValue)\r\n  return previousValue\r\n}, {} as PathConfigMap)\r\n\r\nexport default {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        path: Config.rootPath,\r\n        screens: screens\r\n      },\r\n      NotFound: '*',\r\n    },\r\n  },\r\n};\r\n","/**\r\n * If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport NotFoundScreen from '../packages/core/screens/NotFoundScreen';\r\nimport { RootStackParamList } from '../types';\r\nimport DrawerNavigator from './DrawerNavigator';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Root\" component={DrawerNavigator} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","export default {\r\n    initialRouteName:\"TabOne\",\r\n    repo:\"https://github.com/blacktokki/react-native-practice.git\",\r\n    packages: ['core']\r\n}","import { toNumber } from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Platform, StyleSheet, View, ScrollView, Animated, GestureResponderEvent, StyleProp, ViewStyle, LayoutChangeEvent } from 'react-native';\r\n\r\nexport type renderItemInnerParams<T> = {\r\n  item:T,\r\n  holderStyle:StyleProp<ViewStyle>,\r\n  buttonOnPress:(event:GestureResponderEvent)=>void,\r\n  onClose:(callback:()=>void)=>void,\r\n  contentStyle:StyleProp<ViewStyle>,\r\n  contentOnLayout:(event:LayoutChangeEvent)=>void,\r\n}\r\n\r\ninterface PanelProp<T>{\r\n    item: T,\r\n    numnum:number,\r\n    initExpanded:boolean,\r\n    horizontal?:boolean | null,\r\n    expandSpeed:number,\r\n    holderStyle:StyleProp<ViewStyle>,\r\n    closeAll: ()=>void,\r\n    renderItem: (params:renderItemInnerParams<T>)=>React.ReactNode\r\n}\r\n\r\ninterface PanelState{\r\n    expanded: boolean\r\n    maxHeight: number | null,\r\n    style:any,\r\n    onCloseCallback: ()=>void\r\n}\r\n\r\nexport class Accordion_Panel<T> extends Component<PanelProp<T>, PanelState> {\r\n  state:PanelState = {\r\n    expanded: this.props.initExpanded,  \r\n    maxHeight: null,\r\n    style: {\r\n        overflow: 'hidden'\r\n    },\r\n    onCloseCallback:()=>{}\r\n  }\r\n  mount:boolean = false\r\n  useCloseCallback = false\r\n\r\n  setExpand(value:boolean){\r\n    //console.log('num', this.props.numnum, 'mount', this.mount, 'will-expended', value, this.state)\r\n    if (this.mount){\r\n      this.setState({expanded:value})\r\n    }\r\n  }\r\n\r\n  onClose(callback:()=>void){\r\n    this.useCloseCallback = true,\r\n    Animated.timing(this.state.style.height, {\r\n      toValue: 0,\r\n      duration: 0,\r\n      useNativeDriver:false,\r\n    }).start();\r\n    this.setState({\r\n      expanded:false,\r\n      style:{\r\n        overflow: 'hidden',\r\n        height: new Animated.Value(0)\r\n      },\r\n      onCloseCallback:callback\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.initExpanded)\r\n      this.props.closeAll()\r\n    this.mount = true\r\n  }\r\n  componentWillUnmount(){\r\n    this.mount = false\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (this.state.style.height !== undefined && this.state.maxHeight !== null){\r\n      //console.log(this.state.expanded, this.state.style.height._value, this.state.maxHeight)\r\n      if (this.state.expanded && this.state.style.height._value == 0) {\r\n        Animated.timing(this.state.style.height, {\r\n          toValue: this.state.maxHeight,\r\n          duration: this.props.expandSpeed,\r\n          useNativeDriver:false,\r\n        }).start();\r\n      }\r\n      else if (!this.state.expanded && this.state.style.height._value == this.state.maxHeight){\r\n        Animated.timing(this.state.style.height, {\r\n          toValue: 0,\r\n          duration: this.props.expandSpeed,\r\n          useNativeDriver:false,\r\n        }).start();\r\n      }\r\n    }\r\n    else if(this.state.maxHeight !== null){\r\n      this.setState({\r\n        style:{\r\n          overflow: 'hidden',\r\n          height: new Animated.Value(0)\r\n        }\r\n      })\r\n    }\r\n    if (this.useCloseCallback){\r\n      this.useCloseCallback = false\r\n      setTimeout(this.state.onCloseCallback, 100)\r\n    }\r\n  }\r\n  onPress(event:GestureResponderEvent){\r\n    this.props.closeAll()\r\n    this.setExpand(true)\r\n  }\r\n \r\n  render() {\r\n    const holderStyle:any[] = [this.props.holderStyle, {opacity:this.state.maxHeight== null?0:100}]\r\n    if (this.props.horizontal)\r\n      holderStyle.push({height:'100%', backgroundColor: 'rgba(0, 0, 0, 0)'})\r\n    return this.props.renderItem({\r\n      item:this.props.item,\r\n      holderStyle:holderStyle,\r\n      buttonOnPress:this.onPress.bind(this),\r\n      contentStyle:this.state.style,\r\n      contentOnLayout:((event:LayoutChangeEvent) => {\r\n        var {x, y, width, height} = event.nativeEvent.layout;\r\n        if (this.state.maxHeight == null){\r\n          //console.log(this.state.maxHeight, height)\r\n          this.setState({\r\n            maxHeight: height\r\n          })\r\n        }\r\n      }).bind(this),\r\n      onClose:this.onClose.bind(this),\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport type RenderItemParams<T> = renderItemInnerParams<T> & {index: number}\r\n\r\ntype Props<T, R extends RenderItemParams<T>> = {\r\n    data:T[],\r\n    scrollEnabled?:boolean,\r\n    renderItem:(params:R)=>React.ReactNode,\r\n    keyExtractor:(item:T, index:number)=>string,\r\n    holderStyle:StyleProp<ViewStyle>,\r\n    expandSpeed?:number,\r\n    horizontal?: boolean | null\r\n  }\r\n\r\nexport default class Accordion<T, R extends RenderItemParams<T>, P> extends Component<Props<T, R> & P> {\r\n  constructor(props:Props<T, R> & P) {\r\n    super(props);\r\n    this.childrenRef = []\r\n    this.expandSpeed = props.expandSpeed || 200\r\n  }\r\n  childrenRef: (Accordion_Panel<T>| null)[];\r\n  expandSpeed: number;\r\n\r\n  update_Layout = () => {\r\n    this.childrenRef.forEach((ref) => {\r\n      if (ref && ref.state.expanded){\r\n        ref.setExpand(false)\r\n      }\r\n    });\r\n  }\r\n  \r\n  renderItem = (params:R & {initExpanded:boolean}) => {\r\n    return <Accordion_Panel<T>\r\n        ref={ref=>{this.childrenRef.push(ref)}}\r\n        numnum={params.index}\r\n        key={params.index}\r\n        holderStyle={this.props.holderStyle}\r\n        horizontal={this.props.horizontal}\r\n        closeAll={this.update_Layout.bind(this)}\r\n        item={params.item}\r\n        initExpanded={params.initExpanded}\r\n        expandSpeed={this.expandSpeed}\r\n        renderItem={(params2:renderItemInnerParams<T>)=> this.props.renderItem({...params2, ...params} as R)}\r\n    />}\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.MainContainer}>\r\n        <ScrollView contentContainerStyle={{ paddingHorizontal: 10, paddingVertical: 5 }}>\r\n          {\r\n            this.props.data.map((item, index)=> this.renderItem({item:item, index:index, initExpanded:false} as R & {initExpanded:boolean}))\r\n          }\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: (Platform.OS === 'ios') ? 20 : 0\r\n  }\r\n});","import React, { useState, useCallback, useRef, useEffect, RefObject } from \"react\";\r\nimport { View, FlatList, NativeSyntheticEvent, NativeScrollEvent } from \"react-native\";\r\nimport {SortableContainer, SortableElement, SortEnd} from 'react-sortable-hoc';\r\n\r\nconst Results = SortableContainer((props:any) => {\r\n    const [dataLength, setDataLength] = useState(props.data.length)\r\n    const ref = useRef<FlatList>(null)\r\n    useEffect(()=>{\r\n      //console.log(dataLength, '!=', props.data.length, '==', props.last)\r\n      if (dataLength != props.data.length && props.last > 0){\r\n        if (dataLength < props.data.length && props.last == props.data.length){\r\n          setTimeout(() =>{ref.current?.scrollToEnd()}, props.scrollDelay)\r\n        }\r\n        setDataLength(props.data.length)\r\n      }\r\n      if (dataLength < props.data.length && props.last ==1){\r\n        ref.current?.scrollToIndex({animated:true, index:1})\r\n      }\r\n      const el = (ref.current?.getNativeScrollRef() as any).getScrollableNode()\r\n      if (el && props.horizontal) {\r\n        const onWheel = (e:any) => {\r\n          if (e.deltaY == 0) return;\r\n          e.preventDefault();\r\n          el.scrollTo({\r\n            left: el.scrollLeft + e.deltaY,\r\n          });\r\n        };\r\n        el.addEventListener(\"wheel\", onWheel);\r\n        return () => el.removeEventListener(\"wheel\", onWheel);\r\n      }\r\n    });\r\n    return(\r\n      <FlatList\r\n        ref={ref}\r\n        renderItem={props.renderItem}\r\n        data={props.data}\r\n        scrollEnabled={props.scrollEnabled}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        horizontal={props.horizontal}\r\n        removeClippedSubviews={true}\r\n        windowSize={10 + Math.floor(props.data.length / 2)}\r\n        ListFooterComponent={props.ListFooterComponent}\r\n        onScroll={props.onScroll}\r\n        //contentContainerStyle={{\r\n        //    flexGrow: 1\r\n        //}}\r\n      />\r\n    )\r\n  });\r\n\r\nconst Element = SortableElement((props:any) => {\r\n    return props.children\r\n});\r\n\r\nexport type RenderItemParams<T> = {item:T, index:number}\r\nexport type CommandSetterParams<T> = {\r\n  getData:()=>T[], add:(newData:T, index:any)=>void, remove:(index:any)=>T, shift:(newIndex:any, oldIndex:any)=>void\r\n}\r\n\r\ntype Props<T> = {\r\n  data:T[],\r\n  dataCallback:(data:T[])=>void,\r\n  scrollEnabled?:boolean,\r\n  sortEnabled:boolean,\r\n  renderItem:(params:RenderItemParams<T>)=>React.ReactNode,\r\n  height:number,\r\n  keyExtractor:(item:T, index:number)=>string,\r\n  scrollDelay?: number,\r\n  updateBeforeSortStart?: ()=> void\r\n  horizontal: boolean | null | undefined,\r\n  onScroll?: (e:NativeSyntheticEvent<NativeScrollEvent>)=>void,\r\n  commandSetter?: (params:CommandSetterParams<T>)=>void\r\n  ListFooterComponent?:React.ReactElement\r\n}\r\n\r\nfunction DraggableFlatList<T>(props:Props<T>) {\r\n  const [data, setData] = useState(props.data);\r\n  const [last, setLast] = useState(props.data.length)\r\n  const cacheItem = useRef<{[index: number]:[T, React.ReactNode]}>({}) \r\n  const renderItem = useCallback(\r\n    ({item, index, isActive}) => {\r\n      if (index in cacheItem.current && cacheItem.current[index][0] == item)\r\n        return cacheItem.current[index][1]\r\n        cacheItem.current[index] = [item, (<Element key = {index} index={index}>\r\n        {props.renderItem({item:item, index:index})}\r\n      </Element>)]\r\n      return cacheItem.current[index][1]\r\n  },\r\n    []\r\n  );\r\n  const read = useCallback(()=>data, [data])\r\n  const add = useCallback((newData, index) => {\r\n    const _data = data.map((item:T)=>item);\r\n    _data.splice(index, 0, newData);\r\n    setData(_data)\r\n    props.dataCallback(_data)\r\n    setLast(index + 1)\r\n  }, [data, last])\r\n  const remove = useCallback((index)=>{\r\n    const _data = data.map((item:T)=>item);\r\n    _data.splice(index, 1);\r\n    setData(_data)\r\n    props.dataCallback(_data)\r\n    setLast(-1)\r\n    return data[index]\r\n  }, [data])\r\n  const shift = useCallback((newIndex, oldIndex)=>{\r\n    if (newIndex!=oldIndex){\r\n      const _data = data.map((item:T)=>item);\r\n      _data.splice(newIndex, 0, _data.splice(oldIndex, 1)[0]);\r\n      setData(_data);\r\n      props.dataCallback(_data)\r\n    }\r\n  },[data])\r\n  if (props.commandSetter)\r\n    props.commandSetter({getData:read, add:add, remove:remove, shift:shift})\r\n  return (\r\n    <View style={{ height:props.height }}>\r\n      <Results\r\n        data={data}\r\n        renderItem={renderItem}\r\n        keyExtractor={props.keyExtractor}\r\n        onSortEnd={({newIndex, oldIndex}:SortEnd) => shift(newIndex, oldIndex)}\r\n        distance={props.sortEnabled ? 5 : 99999}\r\n        scrollEnabled={props.scrollEnabled}\r\n        ListFooterComponent={props.ListFooterComponent}\r\n        last={last}\r\n        horizontal={props.horizontal}\r\n        scrollDelay={props.scrollDelay || 0.5 * data.length}\r\n        updateBeforeSortStart={props.updateBeforeSortStart}\r\n        onScroll={props.onScroll}\r\n  />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default DraggableFlatList;","import React from 'react';\r\nimport { Platform, StyleSheet, View, NativeSyntheticEvent, NativeScrollEvent } from 'react-native';\r\nimport Accordion, {RenderItemParams as AccordionRenderItemParams }  from './Accordion'\r\nimport DraggableFlatList, {RenderItemParams as _RenderItemParams, CommandSetterParams as _CommandSetterParams} from './DraggableFlatList'\r\nexport type RenderItemParams<T> = _RenderItemParams<T> & AccordionRenderItemParams<T>\r\nexport type CommandSetterParams<T> = _CommandSetterParams<T>\r\n\r\ntype Props<T> ={\r\n  dataCallback:(data:T[])=>void,\r\n  height: number,\r\n  sortEnabled:boolean,\r\n  renderItem:(params:RenderItemParams<T>)=>React.ReactNode\r\n  onScroll?: (e:NativeSyntheticEvent<NativeScrollEvent>)=>void,\r\n  commandSetter?: (params:CommandSetterParams<T>)=> void\r\n  ListFooterComponent?:React.ReactElement\r\n}\r\n\r\nexport default class DraggableAccordion<T, P> extends Accordion<T, RenderItemParams<T> ,Props<T> & P>{\r\n  initExpanded:boolean = false\r\n\r\n  renderDraggableItem = (params:_RenderItemParams<T>) => this.renderItem({...params, initExpanded:this.initExpanded} as RenderItemParams<T> & {initExpanded:boolean})\r\n  componentDidMount(){\r\n    this.initExpanded = true\r\n  }\r\n  updateBeforeSortStart = ()=>{\r\n    this.childrenRef.forEach((ref) => {\r\n      if (ref && ref.state.expanded){\r\n        ref.onClose(()=>{})\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.MainContainer}>\r\n        <DraggableFlatList<T>\r\n          data={this.props.data}\r\n          dataCallback={this.props.dataCallback}\r\n          commandSetter={this.props.commandSetter}\r\n          renderItem={this.renderDraggableItem}//1\r\n          sortEnabled={this.props.sortEnabled}\r\n          height={this.props.height}\r\n          keyExtractor={(item, index)=>`${index}`}\r\n          scrollDelay={this.expandSpeed * 2}\r\n          horizontal={this.props.horizontal}\r\n          updateBeforeSortStart={this.updateBeforeSortStart}\r\n          onScroll={this.props.onScroll}\r\n          ListFooterComponent={this.props.ListFooterComponent}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: (Platform.OS === 'ios') ? 20 : 0\r\n  }\r\n});\r\n","\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Dimensions, Platform, StyleProp, ViewStyle, Animated, NativeSyntheticEvent, NativeScrollEvent  } from \"react-native\";\r\nimport { useHeaderHeight } from '@react-navigation/stack';\r\nimport DraggableAccordion, { RenderItemParams, CommandSetterParams as _CommandSetterParams } from './DraggableAccordion'\r\nexport type CommandSetterParams = _CommandSetterParams<DraggableSection>\r\n\r\nconst renderItem = ({ item, index, drag, isActive, holderStyle, buttonOnPress, contentStyle, contentOnLayout, onClose }:RenderItemParams<DraggableSection>) => {\r\n  return (\r\n    <View style={holderStyle}>\r\n        <TouchableOpacity activeOpacity={0.7} onPress={buttonOnPress} style={{padding: 10, backgroundColor: '#888'}}>\r\n          {item.header}\r\n        </TouchableOpacity>\r\n        <Animated.View\r\n          style={[contentStyle, isActive?{height:0}:{}]} \r\n          onLayout={contentOnLayout}>\r\n          {item.body}\r\n        </Animated.View>\r\n      </View>\r\n  )\r\n}\r\n\r\nconst renderItemSort = (params:RenderItemParams<DraggableSection>) => {\r\n  return (\r\n        <TouchableOpacity\r\n        style={{\r\n          backgroundColor: params.isActive ? \"red\" : \"white\",\r\n          marginRight: Platform.OS == 'web'? 0 : 5,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        onLongPress={()=>{if(params.drag)params.onClose(params.drag)}}\r\n      >\r\n      {renderItem(params)}\r\n    </TouchableOpacity>\r\n    )\r\n}\r\nconst renderItemUnsort = (params:RenderItemParams<DraggableSection>) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        marginRight: 0,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {renderItem(params)}\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\ntype Props = {\r\n  children: React.ReactNode,\r\n  header: React.ReactNode[],\r\n  holderStyle?:StyleProp<ViewStyle>,\r\n  scrollEnabled?: boolean, \r\n  sortEnabled?: boolean, \r\n  horizontal?: boolean | null,\r\n  dataCallback:(data:React.ReactNode[])=>void,\r\n  onScroll?: (e:NativeSyntheticEvent<NativeScrollEvent>)=>void,\r\n  commandSetter?: (params:CommandSetterParams)=> void\r\n  ListFooterComponent?:React.ReactElement\r\n}\r\n\r\ntype DraggableSection = {\r\n  header:React.ReactNode\r\n  body:React.ReactNode\r\n}\r\n\r\n\r\nexport default function DraggableFlatListMain(props:Props){\r\n    const headerHeight = useHeaderHeight();\r\n    const _data =  React.Children.toArray(props.children).map((value, index)=>({header:props.header[index] || (<View></View>), body:value}))\r\n    const _sortEnabled = (props.sortEnabled === undefined ? true : props.sortEnabled)\r\n    const _renderItem = _sortEnabled ? renderItemSort : renderItemUnsort\r\n    const _height = Dimensions.get(\"window\").height - headerHeight\r\n    const __renderItem = (params:RenderItemParams<DraggableSection>)=> {\r\n      return <View style={props.horizontal?{minHeight:0, width:Dimensions.get('window').width}:{flex:1}}>{_renderItem(params)}</View>\r\n    }\r\n    return (<DraggableAccordion<DraggableSection, {}>\r\n        data={_data}\r\n        commandSetter={props.commandSetter}\r\n        dataCallback={props.dataCallback}\r\n        sortEnabled={_sortEnabled}\r\n        scrollEnabled={props.scrollEnabled}\r\n        height={_height}\r\n        holderStyle={props.holderStyle}\r\n        renderItem={__renderItem}\r\n        keyExtractor={(item:React.ReactNode, index:number) => `main-draggable-item-${index}`}\r\n        horizontal={props.horizontal}\r\n        onScroll={props.onScroll}\r\n        ListFooterComponent={props.ListFooterComponent}\r\n    />)\r\n}","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditScreenInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this screen:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeScreenFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { Text, View } from './Themed';\r\nimport { StyleSheet, TouchableOpacity, GestureResponderEvent } from 'react-native';\r\nimport EditScreenInfo from './EditScreenInfo';\r\n\r\ntype SectionDummyParamList = {\r\n    title: string,\r\n    pressText1: string,\r\n    onPress1:(event: GestureResponderEvent)=>void,\r\n    path: string\r\n}\r\n\r\nexport default function SectionDummy(props:SectionDummyParamList){\r\n  return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity onPress={props.onPress1} style={styles.link}>\r\n            <Text style={styles.linkText}>{props.pressText1}</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.title}>{props.title}</Text>\r\n            <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n            <EditScreenInfo path={props.path} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    title: {\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    separator: {\r\n      marginVertical: 30,\r\n      height: 1,\r\n      width: '80%',\r\n    },\r\n    link: {\r\n      marginTop: 15,\r\n      paddingVertical: 15,\r\n    },\r\n    linkText: {\r\n      fontSize: 14,\r\n      color: '#2e78b7',\r\n    },\r\n  });\r\n  ","import React, {useCallback, useRef} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { DrawerParamList } from '../../../types';\r\nimport { StyleSheet, Text, Button} from 'react-native';\r\nimport DraggableFlatListMain, {CommandSetterParams} from '../components/DraggableFlatListMain'\r\nimport SectionDummy from '../components/SectionDummy'\r\n\r\n\r\nexport default function TabOneScreen({\r\n  navigation\r\n}: StackScreenProps<typeof DrawerParamList, 'TabOne'>) {\r\n  const ref= useRef<typeof DraggableFlatListMain>(null)\r\n  const command:CommandSetterParams | any = {} \r\n  const dataCallback = useCallback((data)=>{console.log('dataCallback')}, [])\r\n  const header = []\r\n  const arr = []\r\n  for (let i=0;i<10;i++){\r\n    header[i] = <Text style={styles.Panel_Button_Text}>{'Tab One' + (i+1)} </Text>\r\n    arr[i] = <SectionDummy\r\n    key={i}\r\n    title={'Tab One' + (i+1)}\r\n    pressText1='Go 2 screen!'\r\n    onPress1={() => {navigation.navigate('TabTwo')}}\r\n    path='/screens/TabOneScreen.tsx'\r\n  />\r\n  }\r\n  return (\r\n    <DraggableFlatListMain\r\n      header={header}\r\n      commandSetter={(commandAll:CommandSetterParams)=>{Object.assign(command, commandAll)}}\r\n      dataCallback={dataCallback}\r\n      ListFooterComponent={\r\n        <Button\r\n          onPress={()=>{command.add({\r\n            header:(\r\n              <Text style={styles.Panel_Button_Text}>{'Tab One' + (command.getData().length +1)} </Text>\r\n            ),\r\n            body:(\r\n             <SectionDummy\r\n                title={'Tab One' + (command.getData().length + 1)}\r\n                pressText1='Go 2 screen!'\r\n                onPress1={() => {navigation.navigate('TabTwo')}}\r\n               path='/screens/TabOneScreen.tsx'\r\n              />)}, command.getData().length)}}\r\n          title=\"add\"\r\n          color=\"#888\"\r\n        />\r\n      }\r\n    >\r\n      {arr}\r\n    </DraggableFlatListMain>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})","import * as React from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { DrawerParamList} from '../../../types';\r\nimport { StyleSheet, Text} from 'react-native';\r\n//import DraggableFlatListDummy from '../components/DraggableFlatListDummy'\r\nimport SectionDummy from '../components/SectionDummy'\r\nimport DraggableFlatListMain from '../components/DraggableFlatListMain'\r\n\r\nexport default function TabTwoScreen({\r\n  navigation\r\n}: StackScreenProps<typeof DrawerParamList, 'TabTwo'>) {\r\n  return (<DraggableFlatListMain\r\n    header={[\r\n      <Text style={styles.Panel_Button_Text}>{'Tab Two 1'} </Text>,\r\n      <Text style={styles.Panel_Button_Text}>{'Tab Two 2'} </Text>\r\n    ]}\r\n    dataCallback={()=>{}}\r\n    holderStyle={styles.Panel_Holder}\r\n    sortEnabled={false}\r\n  >\r\n    <SectionDummy\r\n      title='Tab Two'\r\n      pressText1='Go 1 screen!'\r\n      onPress1={() => {navigation.navigate('TabOne')}}\r\n      path='/screens/TabTwoScreen.tsx'\r\n    />\r\n    <SectionDummy\r\n        title='Tab Two'\r\n        pressText1='Go 1 screen!'\r\n        onPress1={() => {navigation.navigate('TabOne')}}\r\n        path='/screens/TabTwoScreen.tsx'\r\n    />\r\n    <SectionDummy\r\n        title='Tab Two'\r\n        pressText1='Go 1 screen!'\r\n        onPress1={() => {navigation.navigate('TabOne')}}\r\n        path='/screens/TabTwoScreen.tsx'\r\n    />\r\n  </DraggableFlatListMain>\r\n  )\r\n  //return (<DraggableFlatListDummy/>) \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_text: {\r\n    fontSize: 18,\r\n    color: '#000',\r\n    padding: 10\r\n  },\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n    marginVertical: 5\r\n  }\r\n})\r\n","import React, {useCallback} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { DrawerParamList} from '../../../types';\r\nimport { StyleSheet, Text, NativeSyntheticEvent, NativeScrollEvent} from 'react-native';\r\n//import DraggableFlatListDummy from '../components/DraggableFlatListDummy'\r\nimport SectionDummy from '../components/SectionDummy'\r\nimport DraggableFlatListMain, {CommandSetterParams} from '../components/DraggableFlatListMain'\r\n\r\nexport default function TabThreeScreen({\r\n  navigation\r\n}: StackScreenProps<typeof DrawerParamList, 'TabTwo'>) {\r\n  const header = []\r\n  const arr = []\r\n  for (let i=0;i<10;i++){\r\n    header[i] = <Text style={styles.Panel_Button_Text}>{'Tab One' + (i+1)} </Text>\r\n    arr[i] = <SectionDummy\r\n    key={i}\r\n    title={'Tab One' + (i+1)}\r\n    pressText1='Go 2 screen!'\r\n    onPress1={() => {navigation.navigate('TabTwo')}}\r\n    path='/screens/TabOneScreen.tsx'\r\n  />\r\n  }\r\n  const command:CommandSetterParams | any = {} \r\n  const onScroll = (e:NativeSyntheticEvent<NativeScrollEvent>) =>{\r\n    const n=e.nativeEvent;\r\n    //console.log(n.contentOffset.x/n.contentSize.width, n.layoutMeasurement.width/n.contentSize.width)\r\n    if ((n.contentOffset.x + n.layoutMeasurement.width) >= n.contentSize.width){\r\n      const _data = command.remove(0);\r\n      setTimeout(() => command.add(_data, command.getData().length), 200)\r\n    }\r\n    else if (n.contentOffset.x == 0 ){\r\n      const _data = command.remove(command.getData().length -1);\r\n      setTimeout(() => command.add(_data, 0), 200)\r\n    }\r\n  }\r\n  return (<DraggableFlatListMain\r\n    header={header}\r\n    commandSetter={(commandAll:CommandSetterParams)=>{Object.assign(command, commandAll)}}\r\n    dataCallback={()=>{}}\r\n    holderStyle={styles.Panel_Holder}\r\n    sortEnabled={false}\r\n    horizontal={true}\r\n    onScroll={onScroll}\r\n  >\r\n    {arr}\r\n  </DraggableFlatListMain>\r\n  )\r\n  //return (<DraggableFlatListDummy/>) \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Panel_text: {\r\n    fontSize: 18,\r\n    color: '#000',\r\n    padding: 10\r\n  },\r\n  Panel_Button_Text: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 21\r\n  },\r\n  Panel_Holder: {\r\n    borderWidth: 1,\r\n    borderColor: '#888',\r\n  }\r\n})\r\n","import TabOneScreen from './TabOneScreen'\r\nimport TabTwoScreen from './TabTwoScreen'\r\nimport TabThreeScreen from './TabThreeScreen'\r\nexport default {\r\n    TabOneScreen:{\r\n        component: TabOneScreen,\r\n        title: 'Tab One Title',\r\n        url: 'one'\r\n    },\r\n    TabTwoScreen:{\r\n        component: TabTwoScreen,\r\n        title: 'Tab Two Title',\r\n        url: 'two'\r\n    },\r\n    TabThreeScreen:{\r\n        component: TabThreeScreen,\r\n        title: 'Tab Three Title',\r\n        url: 'three'\r\n    }\r\n}\r\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n"],"sourceRoot":""}