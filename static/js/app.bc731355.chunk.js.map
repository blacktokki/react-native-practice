{"version":3,"sources":["App.tsx","useCachedResources.ts"],"names":["App","isLoadingComplete","React","setLoadingComplete","a","async","SplashScreen","Font","Ionicons","font","require","console","warn","useCachedResources","colorScheme","useColorScheme","initRender","StatusBar","pushScreenModule","_default","marble"],"mappings":"20BAce,SAASA,IACtB,IAAMC,ECVO,WACb,MAAgDC,YAAe,GAA/D,WAAOD,EAAP,KAA0BE,EAA1B,KAyBA,OAtBAD,aAAgB,WACd,EAAAE,EAAAC,OAAA,gEAEIC,MAFJ,WAAAF,EAAA,MAKUG,IAAA,OACDC,IAASC,MADR,IAEJ,aAAcC,EAAQ,SAP5B,sDAWIC,QAAQC,KAAR,MAXJ,uBAaIT,GAAmB,GACnBG,MAdJ,mFAmBC,IAEIL,EDhBmBY,GACpBC,EAAcC,cAEpB,OAAKd,GAGHe,cAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYF,YAAaA,IACzB,kBAACG,EAAA,EAAD,QANG,KATXC,YAAiBC,KACjBD,YAAiBE,M","file":"static/js/app.bc731355.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport _ from 'lodash';\nimport { initRender, Navigation, useColorScheme, pushScreenModule } from '@react-native-practice/core';\nimport useCachedResources from './useCachedResources';\n\nimport _default from '@react-native-practice/default/screens';\nimport marble from '@react-native-practice/marble/screens';\n\npushScreenModule(_default)\npushScreenModule(marble)\n\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    initRender()\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('@react-native-practice/core/assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"],"sourceRoot":""}